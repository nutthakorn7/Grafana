version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - grafana
      - loki
      - prometheus
    networks:
      - glpn_monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    volumes:
      - ./grafana:/etc/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - glpn_monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - glpn_monitoring

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    restart: always
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki:/etc/loki
      - ./loki/data:/data
    networks:
      - glpn_monitoring

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    restart: always
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail/config.yaml:/etc/promtail/config.yaml
    networks:
      - glpn_monitoring

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"
    networks:
      - glpn_monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    networks:
      - glpn_monitoring

networks:
  glpn_monitoring:
    driver: bridge
